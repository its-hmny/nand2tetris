class Grid {
    field Array cells; // 0 = empty, 1 = player X, 2 = player O
    field int x, y, line, cell;

    constructor Grid new(int lineStroke, int cellSize) {
        var int r;  let r = (lineStroke * 2) + ((cellSize * 3) / 2);
        
        let cells = Array.new(9);
        let x = 256 + r; let y = 128 - 20 + r; // The initial coords to draw the grid at
        let line = lineStroke; let cell = cellSize; // Cell width and line stroke settings

        return this;
    }

    method int getCell(int row, int col) { return cells[(row * 3) + col]; }

    method void setCell(int row, int col, int player) {
        let cells[(row * 3) + col] = player;
        return;
    }

    method void render() {
        do Screen.drawRectangle(  x - line,               y - (cell * 3),         x,               y  );
        do Screen.drawRectangle(  x - line - cell,        y - (cell * 3),         x - cell,        y  );
        do Screen.drawRectangle(  x - line - (cell * 2),  y - (cell * 3),         x - (cell * 2),  y  );
        do Screen.drawRectangle(  x - line - (cell * 3),  y - (cell * 3),  x - (cell * 3),  y  );

        do Screen.drawRectangle(  x - (cell * 3),  y - line,               x,  y               );
        do Screen.drawRectangle(  x - (cell * 3),  y - line - cell,        x,  y - cell        );
        do Screen.drawRectangle(  x - (cell * 3),  y - line - (cell * 2),  x,  y - (cell * 2)  );
        do Screen.drawRectangle(  x - (cell * 3),  y - line - (cell * 3),  x,  y - (cell * 3)  );
        
        return;
    }
        
        while (row < 3) {
            let col = 0;
        
            while (col < 3) {
                // ? let x = x + (col * gridSize);
                // ? let y = y + (row * gridSize);
                // ? do Screen.drawRectangle(x, y, x + gridSize, y + gridSize);
                
                // let val = getCell(row, col);
                // if (val = 1) {
                //     do Screen.drawLine(x, y, x + gridSize, y + gridSize);
                //     do Screen.drawLine(x + gridSize, y, x, y + gridSize);
                // }
                // if (val = 2) {
                //     do Screen.drawCircle(x + (gridSize / 2), y + (gridSize / 2), gridSize / 2 - 2);
                // }
                
                let col = col + 1;
            }
            
            let row = row + 1;
        }

        return;
    }
}
