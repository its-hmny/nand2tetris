class Cursor {
    field int row, col, cursorS, cellS;

    constructor Cursor new(int cursorSize, int cellSize) {
        let row = 0; let col = 0; 
        let cursorS = cursorSize; let cellS = cellSize;
        
        return this;
    }

    method void dispose() { do Memory.deAlloc(this); return; }

    method int getRow() { return row + 1; }
    method int getCol() { return col + 1; }

    method void move(int dr, int dc) {
        if (((row + dr) < -1) | ((row + dr) > 1)) { return; }
        if (((col + dc) < -1) | ((col + dc) > 1)) { return; }
        
        let row = row + dr; let col = col + dc;        
        
        return;
    }

    method void render() {
        var int sx, sy; let sx = 256 + (row * cellS); let sy = (128 - 20) + (col * cellS);
        do Screen.drawRectangle(sx - cursorS, sy - cursorS, sx + cursorS, sy + cursorS);
        
        return;
    }
}
